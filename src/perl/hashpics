#!/usr/bin/perl
use strict;
use warnings;
use Image::ExifTool qw(:Public);
use Path::Class;

#TODO Add command line parameters for these
my $verbose = 0;
my $symlink = 0;

my $wd = shift( @ARGV );

if( $wd ) {
	if( -d $wd ) {
		chdir( $wd );
	} else {
		print STDERR "$wd is not a directory\n";
	}
}
my $current = $ENV{'PWD'};

if( -f '.hashpics-as-symlinks' ) {
	$symlink = 1;
	print( "Using symlinks\n" );
}

my @images = glob( '*.{mov,mp4,avi,jpg,png,gif,nef,3gp,JPG,JPEG,jpeg}' );
foreach my $image (@images ) {
	my $hasDate = my($year,$month,$day) = $image =~ /([0-9]{4})-([0-9]{2})-([0-9]{2})/;
	if($hasDate) {
		print("Filename date for '$image':$year,$month,$day\n") if($verbose);
	} else {
		my $imgInfo = ImageInfo($image);
		($year,$month,$day) = $imgInfo->{DateTimeOriginal} =~ /^([0-9]{4}):([0-9]{2}):([0-9]{2}) / if($imgInfo->{DateTimeOriginal});
		$hasDate = ( $year && $month && $day );
	}

	unless( $hasDate ){
		print STDERR ( "WARNING: No date found for $image\n" );
		next;
	}
	my $dir = join ('/',($year,$month,$day));
	print($image,"\n$dir\n\n") if($verbose);
	unless( -d $dir ) {
		`mkdir -p $dir`;
	}

	if($image =~ /\.(jpg|JPG|JPEG|jpeg)^/) {
		# Transform to match exif info orientation
		`exiftran -ia $image`;
	}

	if( $symlink ) {
		my $current = $wd;
		my $full = file( "$current/$image" );
		my $relative = $full->relative( "$current/$dir" );

		`ln -sf $relative $dir`
	} else {
		`mv '$image' $dir`;	
	}
}
